<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>reveal.js - The HTML Presentation Framework</title>

		<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
		<meta name="author" content="Hakim El Hattab">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.min.css">
		<link rel="stylesheet" href="css/theme/default.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', include the PDF print sheet -->
		<script>
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = 'css/print/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
			}
		</script>

<style>

.reveal img, .reveal video, .reveal iframe {
	max-width: 150%;
	max-height: 150%;
  position:relative;
	left: -25%;
}

		</style>
		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section data-transition="fade">
					<h1>Immutable Data</h1>
					<h3>in Postgres</h3>
					<p>
						<small>Created by <a href="http://www.garysieling.com/blog">Gary Sieling</a> / <a href="http://twitter.com/garysieling">@garysieling</a></small>
					</p>
				</section>

				<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix7.png" />
					</p>

					<aside class="notes">
						* Imagine you're an L1 engineer for Netflix
					</aside>
				</section>

				<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix8.png" />
					</p>

					<aside class="notes">
						* Imagine you're an L1 engineer for Netflix
					</aside>
				</section>

      	<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix9.png" />
					</p>

					<aside class="notes">
						* Imagine you're an L1 engineer for Netflix
					</aside>
				</section>

				
      	<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
					<ul>
						<li>"Why is this different than a week ago?" - Customer</li>
						<li>Worse in regualated industries (pharma, banking)</li>
						<li>Possible to answer, but time consuming</li>
					</ul>
					</p>

					<aside class="notes">
						* This is a common customer request for us
						* Regulated industries - harder to blow off questions
						* Banking - pricing time streams
					</aside>
				</section>

       	<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix11.png" />
					</p>

					<aside class="notes">
						* Time-travelling debugger
					</aside>
				</section>

				
				
      	<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix10.png" />
					</p>

					<aside class="notes">
						* Time-travelling debugger
					</aside>
				</section>

			
       	<section data-transition="fade">
					<h2>The Problem</h2>
					<p>
						<img src="netflix12.png" />
					</p>

					<aside class="notes">
						* Time-travelling debugger
					</aside>
				</section>
	

				<section data-transition="fade">
					<h2>Data Model</h2>
					<p>
					<pre><code data-trim>
create table movies (
  title text
)
					</code></pre>
					</p>

					<aside class="notes">

					</aside>
				</section>

				
				<section data-transition="fade">
					<h2>Data Model</h2>
					<p>
					<pre><code data-trim>
create table movies (
  title text,
  license_owner text,
  license_effective tsrange
);
					</code></pre>
					</p>

					<aside class="notes">
						* Note use of range
					</aside>
				</section>

						
				<section data-transition="fade">
					<h2>Data Model</h2>
					<p>
					<pre><code data-trim>
create table movies_audit (
  id int,
  title text,
  license_owner text,
  license_effective tstzrange,
  audit_user text,
  audit_action text,
  audit_date timestamp
);
					</code></pre>

					</p>

					<aside class="notes">
						* Note use of range
					</aside>
				</section>

						<section data-transition="fade">
					<h2>Ranges</h2>
					<p>
					<pre><code data-trim>
select
  id, title
from
  movies_audit
where 
  license_effective @> now()
					</code></pre>

					</p>

					<aside class="notes">
						* Note use of range
					</aside>
				</section>

				<section data-transition="fade">
					<h2>Inserts</h2>
					<p>
					<pre><code data-trim>
CREATE RULE movie_insert AS ON INSERT
TO movies_audit
DO INSTEAD
INSERT INTO movies_audit VALUES (
  new.id,
  new.title,
  new.license_owner,
  new.license_effective,
  current_user,
  'U',
  now()  
);
					</code></pre>
				 	<aside class="notes">
						* Rewrite query
					</aside>
					</p>
				</section>

				<section data-transition="fade">
					<h2>Updates</h2>
					<p>
					<pre><code data-trim>
CREATE RULE movie_update AS ON UPDATE
TO movies_audit
DO INSTEAD
INSERT INTO movies_audit VALUES (
  new.id,
  new.title,
  new.license_owner,
  new.license_effective,
  current_user,
  'U',
  now()  
);
					</code></pre>
				 	<aside class="notes">
						* Rewrite query
					</aside>
					</p>
				</section>

				<section data-transition="fade">
					<h2>Shadow Tables</h2>
					<ul>
						<li>Add user</li>
						<li>Add timestamp</li>
						<li>Update effective range </li>
					</ul>
				 	<aside class="notes">
					  * Use 'application' field to pass the user to the application	
					</aside>
					</p>
				</section>


				<section data-transition="fade">
					<h2>Deletes</h2>
					<p>
					<pre><code data-trim>
CREATE RULE movie_delete AS ON DELETE
TO movies_audit
DO INSTEAD
INSERT INTO movies_audit VALUES (
  old.id,
  null,
  null,
  null,
  current_user,
  'D',
  now()  
);
					</code></pre>
				 	<aside class="notes">
						* Rewrite query
					</aside>
					</p>
				</section>

				<section data-transition="fade">
					<h2>Demo - Blame Tool</h2>
					<ul>
					</ul>
					<aside class="notes">
					</aside>
				</section>

   			<section data-transition="fade">
					<h2>Demo - Compare Over Time Tool</h2>
					<ul>
					</ul>
					<aside class="notes">
					</aside>
				</section>	

	 			<section data-transition="fade">
					<h2>Demo - See Actions</h2>
					<ul>
					</ul>
					<aside class="notes">
					</aside>
				</section>	

  			<section data-transition="fade">
					<h2>Things Postgres Gives Us</h2>
					<ul>
						<li>Ranges</li>
						<li>Named window functions</li>
						<li>Array aggregation</li>
						<li>Triggers</li>
					</ul>
					<aside class="notes">
						* Wishlist - append only data
						* Update single cell in a row
					</aside>
				</section>	

				<section data-transition="fade">
					<h2>Joins</h2>
					<ul>
						<li>Allen's Interval Algebra</li>
	          <li>Join IDs from two tables as usual</li>
						<li>Secondary condition to force time range overlap</li>
					</ul>
					<aside class="notes">
						* http://en.wikipedia.org/wiki/Allen%27s_interval_algebra#Relations
					</aside>
				</section>

				<section data-transition="fade">
					<h2>Data Corrections</h2>
					<ul>
					</ul>
					<aside class="notes">
						* Sometimes we need audit data for the data correction
						* We'd need the audit data to re-undo
						* We need audit data to find out what someone did
					</aside>
				</section>
				
				<section data-transition="fade">
					<h2>SQL Features (1 of ...)</h2>
					<ul>
						<li>X except Y</li>
					</ul>
					<aside class="notes">
						* Good for speed
						* Good for comparisons
					</aside>
				</section>

				<section data-transition="fade">
					<h2>SQL Features (1 of ...)</h2>
					<ul>
						<li>Indexes as materialized views</li>
					</ul>
					<aside class="notes">
						* http://en.wikipedia.org/wiki/Allen%27s_interval_algebra#Relations
					</aside>
				</section>

				<section data-transition="fade">
					<h2>SQL Features (1 of ...)</h2>
					<ul>
						<li>SELECT FROM function</li>
					</ul>
					<aside class="notes">
						* Goal is to provide an API for support team
						* 4-12 hours to answer a support ticket
					</aside>
				</section>

				<section data-transition="fade">
					<h2>SQL Features (1 of ...)</h2>
					<ul>
						<li>Named window</li>
						<li>Lead / Lag</li>
					</ul>
					<aside class="notes">
					</aside>
				</section>

				<section data-transition="fade">
					<h2>Performance Considerations</h2>
					<ul>
						<li>Unindexed data</li>
						<li>Indexing strategy - Datomic</li>
						<li>Full text search - Splunk</li>
					</ul>
				 	<aside class="notes">
						* Data is accessed rarely, and much larger than everything else
						* Worth waiting for results, not maintaining indexes
					</aside>
				</section>

					<section data-transition="fade">
					<h2>Minutea</h2>
					<ul>
						<li>Word replaces characters</li>
						<li>Leading / trailing spaces</li>
						<li>Nulls / spaces / empty string</li>
					</ul>
				 	<aside class="notes">
						* Valid for support
					</aside>
				</section>

				<section data-transition="fade">
					<h2>Other Considerations</h2>
					<ul>
						<li>Global sequence number</li>
						<li>Local sequence number</li>
						<li>Vector clocks</li>
					</ul>
				 	<aside class="notes">
						* (1) shows order of creation of every object in the system
						* (2) can be used to tie specific versions of records in two tables
						* (3) can be used to resolve conflicts in partitioned systems (mobile?)
					</aside>					
				</section>

				<section data-transition="fade">
					<h1>THE END</h1>
					<h3>Gary Sieling / @garysieling</h3>
					<h4>www.garysieling.com</h4>
				</section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Parallax scrolling
				// parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
				// parallaxBackgroundSize: '2100px 900px',

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
